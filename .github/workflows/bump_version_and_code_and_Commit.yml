# This is a basic workflow to help you get started with Actions

name: 'bump versionCode, versionName, commit'

on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      changeSeverity:
        description: 'how severe are the changes? chose from (M)ajor, (m)inor, (p)atch, or write out the new version'
        required: true
        default: 'p'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  increase-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: increase version code
        id: increase_version_code
        env:
          FILE: sudoq-app/sudoqapp/src/main/AndroidManifest.xml
        run: |
          echo "$(pwd)"
          echo "get line number"
          LINE_NUMBER=$(grep -n "android:versionCode=" $FILE | cut -f1 -d:)
          echo "get version"
          VERSION=$(sed -n ${LINE_NUMBER}p $FILE | grep -oE '[0-9]+')
          echo "current version: ${VERSION}"
          echo "replace version"
          NEW_VERSION_CODE=$((VERSION+1))
          echo "new version code: ${NEW_VERSION_CODE}"
          sed -i "${LINE_NUMBER}s/${VERSION}/${NEW_VERSION_CODE}/" $FILE
          echo "::set-output name=new_version_code::$NEW_VERSION_CODE"

      # sets NEW_VERSION_NAME
      - name: increase version name
        id: increase_version_name
        env:
          FILE: sudoq-app/sudoqapp/src/main/AndroidManifest.xml
          SCRIPT: .github/workflows/incrementVersionName.py
        run : |
          python $SCRIPT $FILE ${{ github.event.inputs.changeSeverity }}
          echo "$NEW_VERSION_NAME"
          echo "::set-output name=new_version_name::$(cat new_version_name.txt)"
          rm new_version_name.txt

      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          NEW_VERSION_CODE=${{ steps.increase_version_code.outputs.new_version_code }}
          NEW_VERSION_NAME=${{ steps.increase_version_name.outputs.new_version_name }}
          git commit -m "Version bump: code: ${NEW_VERSION_CODE}, name: ${NEW_VERSION_NAME}" -a

      - name: push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
